# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/ruby:2.5.1-node-browsers

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    - restore_cache:
        name: Restore Yarn Package Cache
        keys:
          - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install Dependencies
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: yarn-packages-{{ checksum "yarn.lock" }}
        paths:
          - ~/.cache/yarn

    # Database setup
    - run: bundle exec rake db:create
    - run: bundle exec rake db:schema:load

    # run tests!
    - run:
        name: run tests
        command: |
          bundle exec rake

    - run:
        name: Build Passed
        when: on_success
        command: |
          if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
            ./scripts/circle_ci_build_info.sh true
          fi

    - run:
        name: Build Failed
        when: on_fail
        command: |
          if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
            ./scripts/circle_ci_build_info.sh false
          fi

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results